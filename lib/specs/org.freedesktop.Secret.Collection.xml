<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
    "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<!--
     * ======================================================================================
     * COLLECTION INTERFACE
     *
    -->
<node name="/org/freedesktop/Secrets/collection/xxxx">

    <interface name="org.freedesktop.Secret.Collection">

        <!--A
        collection of items containing secrets.-->

        <property name="Items" type="ao" access="read">
            <!--Items
            in this collection.-->
        </property>

        <property name="Label" type="s" access="readwrite">
            <!--The
            displayable label of this collection.-->
        </property>

        <property name="Locked" type="b" access="read">
            <!--
                Whether the collection is locked and must be authenticated by the client
                application.
            -->
        </property>

        <property name="Created" type="t" access="read">
            <!--The
            unix time when the collection was created.-->
        </property>

        <property name="Modified" type="t" access="read">
            <!--The
            unix time when the collection was last modified.-->
        </property>

        <method name="Delete">
            <!--Delete
            this collection.-->
            <arg name="prompt" type="o" direction="out">
                <!--A
                prompt to delete the collection, or the special value '/' when no
                    prompt is necessary.-->
            </arg>
        </method>

        <method name="SearchItems">
            <!--Search
            for items in this collection matching the lookup attributes.-->
            <arg name="attributes" type="a{ss}" direction="in">
                <!--Attributes
                to match.-->
            </arg>
            <arg name="results" type="ao" direction="out">
                <!--Items
                that matched the attributes.-->
            </arg>
        </method>

        <method name="CreateItem">
            <!--Create
            an item with the given attributes, secret and label. If replace is
                set, then it replaces an item already present with the same values for the
                attributes.-->
            <arg name="properties" type="a{sv}" direction="in">
                <!--The
                properties for the new item.-->
                <!-- xmlns:docbook="http://docbook.org/ns/docbook">
                <para> Properties for the new item. This allows setting the new item's properties
                    upon its creation. All READWRITE properties are useable. Specify the property
                    names in full interface.Property form. <example>
                        <title>Example for properties</title>
                        <programlisting>
<![CDATA[
properties = {
               "org.freedesktop.Secret.Item.Label": "MyItem",
               "org.freedesktop.Secret.Item.Attributes": {
                          "Attribute1": "Value1",
                          "Attribute2": "Value2"
                    }
             }
]]>
                                </programlisting>
                    </example>
                            <note>
                        <para> Please note that there is a distinction between the terms <emphasis>
                    Property</emphasis>, which refers to a D-Bus properties of an object, and <emphasis>
                    Attribute</emphasis>, which refers to one of a secret item's string-valued
                    attributes. </para>
                    </note>
                </para>
                -->
            </arg>
            <arg name="secret" type="(oayays)" tp:type="Secret" direction="in">
                <!--The
                secret to store in the item, encoded with the included session.-->
            </arg>
            <arg name="replace" type="b" direction="in">
                <!--Whether
                to replace an item with the same attributes or not.-->
            </arg>
            <arg name="item" type="o" direction="out">
                <!--The
                item created, or the special value '/' if a prompt is necessary.-->
            </arg>
            <arg name="prompt" type="o" direction="out">
                <!--A
                prompt object, or the special value '/' if no prompt is necessary.-->
            </arg>
        </method>

        <signal name="ItemCreated">
            <!--A
            new item in this collection was created.-->
            <arg name="item" type="o">
                <!--The
                item that was created.-->
            </arg>
        </signal>

        <signal name="ItemDeleted">
            <!--An
            item in this collection was deleted.-->

            <arg name="item" type="o">
                <!--The
                item that was deleted.-->
            </arg>
        </signal>

        <signal name="ItemChanged">
            <!--An
            item in this collection changed.-->

            <arg name="item" type="o">
                <!--The
                item that was changed.-->
            </arg>
        </signal>

    </interface>

</node>
